/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define HDN 0
#define APTEX 1
#define APT 2
#define NAV 3
#define SYM 4
#define HDNW 5
#define APTEXW 6
#define APTW 7
#define NAVW 8
#define SYMW 9

#define SK(KEY) &nk KEY KEY

&sk {
  release-after-ms = <250>;
  quick-release;
};

&caps_word {
  continue-list = <UNDERSCORE MINUS BACKSPACE K_CANCEL>;
};

/*                KEY POSITIONS

  ╭────────────────────╮ ╭────────────────────╮
  │  0   1   2   3   4 │ │  5   6   7   8   9 │
  │ 10  11  12  13  14 │ │ 15  16  17  18  19 │
  │     20  21  22     │ │     23  24  25     │
  ╰───────────╮ 26  27 │ │ 28  29 ╭───────────╯
              ╰────────╯ ╰────────╯            */

/ { 
  
  behaviors {

    // Sticky key on tap, normal key on hold
    // Useful for modifier-clicking without the modifier remaining active
    nk: not_so_sticky_key {
        compatible = "zmk,behavior-hold-tap";
        label = "NOT_SO_STICKY_KEY";
        #binding-cells = <2>;
        tapping_term_ms = <200>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&sk>;
    };

    skq: sticky_key_quick_release {
      compatible = "zmk,behavior-sticky-key";
      label = "STICKY_KEY_QUICK_RELEASE";
      #binding-cells = <1>;
      bindings = <&kp>;
      quick-release;
      release-after-ms = <200>;
    };

    lal: layer-alpha {
        compatible = "zmk,behavior-hold-tap";
        label = "LAYER_ALPHA";
        #binding-cells = <2>;
        flavor = "tap-preferred";
        tapping-term-ms = <180>;
        quick-tap-ms = <100>;
        global-quick-tap;
        bindings = <&mo>, <&kp>;
    };

        sm: sticky_mod {
            compatible = "zmk,behavior-sticky-key";
            label = "STICK_MOD";
            #binding-cells = <1>;
            release-after-ms = <60000>;
            bindings = <&kp>;
            ignore-modifiers;
            quick-release;
        };

        // Swapper for smart alt+tab depends on experimental branch: check west.yml
        swapper: swapper {
            compatible = "zmk,behavior-smart-interrupt";
            label = "SWAPPER";
            #binding-cells = <0>;
            bindings = <&kt LGUI>, <&kp TAB>, <&kt LGUI>;
            shared-key-positions = <2 3 28>;
            timeout-ms = <500>;
        };

        // Swapper for smart alt+tab depends on experimental branch: check west.yml
        swapperw: swapperw {
            compatible = "zmk,behavior-smart-interrupt";
            label = "SWAPPERW";
            #binding-cells = <0>;
            bindings = <&kt LALT>, <&kp TAB>, <&kt LALT>;
            shared-key-positions = <2 3 28>;
            timeout-ms = <500>;
        };

        gresc: grave_escape {
            compatible = "zmk,behavior-mod-morph";
            label = "GRAVE_ESCAPE";
            #binding-cells = <0>;
            bindings = <&kp N0>, <&kp DOT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            masked_mods = <(MOD_LSFT|MOD_RSFT)>;
        };

     combos {
          #include "combos30.dtsi"
     };
     macros {
          #include "macros.dtsi"
     };

  };
 
        keymap {
                compatible = "zmk,keymap";

        hands_down {
            label = "HDN";
            bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
     &kp W         &kp F         &kp M         &kp P         &kp B             &kp COMMA     &kp X         &kp SQT       &kp J         &kp K
     &kp R         &kp S         &kp N         &kp T         &kp G             &kp DOT       &kp A         &kp E         &kp I         &kp H
                   &kp C         &kp L         &kp D                                         &kp U         &kp O         &kp Y
//               ╰─────────────┴─────────────┼─────────────┤                               ├─────────────┼─────────────┴─────────────╯
                                               &macro_nav   &kp SPACE          &sk LSHIFT    &macro_sym
//                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
            >;
        };

// aptex
// x w m v b  j f ' , .
// r s t h k  p n a i l
//   c g d      y o u
//              e

        aptex {
            label = "APTEX";
            bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
     &kp X         &kp W         &kp M         &kp V         &kp B             &kp J         &kp F         &kp SQT       &kp COMMA     &kp DOT
     &kp R         &kp S         &kp T         &kp H         &kp K             &kp P         &kp N         &kp A         &kp I         &kp L
                   &kp C         &kp G         &kp D                                         &kp Y         &kp O         &kp U
//               ╰─────────────┴─────────────┼─────────────┤                               ├─────────────┼─────────────┴─────────────╯
                                               &macro_nav   &kp SPACE          &sk LSHFT    &lal SYM E
//                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
            >;
        };

//   [z]
// w f m p b  x ' , . y
// r s t h k  j n e a i
//   c g d      l u o
//   [v][q]

        apt {
            label = "APT";
            bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
     &kp W         &kp F         &kp M         &kp P         &kp B             &kp X         &kp SQT       &kp COMMA     &kp DOT       &kp Y
     &kp R         &kp S         &kp T         &kp H         &kp K             &kp J         &kp N         &kp E         &kp A         &kp I
                   &kp C         &kp G         &kp D                                         &kp L         &kp U         &kp O
//               ╰─────────────┴─────────────┼─────────────┤                               ├─────────────┼─────────────┴─────────────╯
                                               &macro_nav   &kp SPACE          &sk LSHIFT    &macro_sym
//                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
            >;
        };

        navitation {
            label = "NAV";
            bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
  &kp LC(LA(LS(P)))    &kp ENTER     &kp BACKSPACE  &kp TAB     &kp DELETE      &kp LA(BACKSPACE) &none         &kp UP        &kp LG(Q)  &gresc
     &sm LCTRL         &sm LALT      &sm LGUI       &sm LSHIFT  &kp LG(A)       &kp LG(A)         &kp LEFT      &kp DOWN      &kp RIGHT  &none
                       &kp LG(X)     &kp LG(C)      &kp LG(V)                                     &kp ENTER     &kp BACKSPACE &kp TAB
//               ╰─────────────┴─────────────┼─────────────┤                               ├─────────────┼─────────────┴─────────────╯
                                                &trans        &trans            &trans       &trans
//                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
            >;
        };

        symbols {
            label = "SYM";
            bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
     &kp TILDE     &kp N9       &kp N8         &kp N7         &kp EQUAL         &kp COMMA    &kp SEMI      &kp COLON    &kp BSLH      &kp GRAVE
     &kp N3        &kp N2       &kp N1         &kp N0         &kp MINUS         &kp DOT      &sm LSHIFT    &sm LGUI     &sm LALT      &sm LCTRL
                   &kp N6       &kp N5         &kp N4                                        &kp QMARK     &kp EXCL     &kp SLASH
//               ╰─────────────┴─────────────┼─────────────┤                               ├─────────────┼─────────────┴─────────────╯
                                               &trans         &trans            &trans        &trans
//                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
            >;
        };

        hands_down_windows {
            label = "HDNW";
            bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
     &kp W         &kp F         &kp M         &kp P         &kp B             &kp COMMA     &kp X         &kp SQT       &kp J         &kp K
     &kp R         &kp S         &kp N         &kp T         &kp G             &kp DOT       &kp A         &kp E         &kp I         &kp H
                   &kp C         &kp L         &kp D                                         &kp U         &kp O         &kp Y
//               ╰─────────────┴─────────────┼─────────────┤                               ├─────────────┼─────────────┴─────────────╯
                                               &macro_navW  &kp SPACE          &sk LSHIFT   &macro_symW
//                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
            >;
        };

        aptexw {
            label = "APTEXW";
            bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
     &kp X         &kp W         &kp M         &kp V         &kp B             &kp J         &kp F         &kp SQT       &kp COMMA     &kp DOT
     &kp R         &kp S         &kp T         &kp H         &kp K             &kp P         &kp N         &kp A         &kp I         &kp L
                   &kp C         &kp G         &kp D                                         &kp Y         &kp O         &kp U
//               ╰─────────────┴─────────────┼─────────────┤                               ├─────────────┼─────────────┴─────────────╯
                                               &macro_navW   &kp SPACE          &sk LSHFT    &lal SYMW E
//                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
            >;
        };

        aptw {
            label = "APTW";
            bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
     &kp W         &kp F         &kp M         &kp P         &kp B             &kp X         &kp SQT       &kp COMMA     &kp DOT       &kp Y
     &kp R         &kp S         &kp T         &kp H         &kp K             &kp J         &kp N         &kp E         &kp A         &kp I
                   &kp C         &kp G         &kp D                                         &kp L         &kp U         &kp O
//               ╰─────────────┴─────────────┼─────────────┤                               ├─────────────┼─────────────┴─────────────╯
                                               &macro_navW  &kp SPACE          &sk LSHIFT    &macro_symW
//                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
            >;
        };


        navigation_windows {
            label = "NAVW";
            bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
&kp LC(LA(LS(P)))  &kp ENTER     &kp BACKSPACE  &kp TAB      &kp DELETE        &kp LC(BACKSPACE)  &kp F2        &kp UP        &kp LA(F4)    &gresc
     &sm LGUI      &sm LALT      &sm LCTRL      &sm LSHIFT   &kp LC(A)         &kp LC(A)          &kp LEFT      &kp DOWN      &kp RIGHT     &none
                   &kp LC(X)     &kp LC(C)      &kp LC(V)                                         &kp ENTER     &kp BACKSPACE &kp TAB
//               ╰─────────────┴─────────────┼─────────────┤                               ├─────────────┼─────────────┴─────────────╯
                                                &trans          &trans         &trans        &trans
//                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
            >;
        };

        symbols_windows {
            label = "SYMW";
            bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
     &kp TILDE     &kp N9       &kp N8         &kp N7         &kp EQUAL         &kp COMMA    &kp SEMI      &kp COLON    &kp BSLH      &kp GRAVE
     &kp N3        &kp N2       &kp N1         &kp N0         &kp MINUS         &kp DOT      &sm LSHIFT    &sm LCTRL    &sm LALT      &sm LGUI
                   &kp N6       &kp N5         &kp N4                                        &kp QMARK     &kp EXCL     &kp SLASH
//               ╰─────────────┴─────────────┼─────────────┤                               ├─────────────┼─────────────┴─────────────╯
                                               &trans        &trans            &trans        &trans
//                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
            >;
        };
};

};